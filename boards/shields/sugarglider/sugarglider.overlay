/*
 * Copyright (c) 2024 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zephyr,display = &oled;
        zmk,kscan = &kscan;
        zmk,matrix-transform = &default_transform;
        /* WIP */
        zmk,backlight = &indicator_leds;
    };

    kscan: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "row2col";

        col-gpios
        = <&expander 8  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
        , <&expander 9  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
        , <&expander 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
        , <&expander 11 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
        , <&expander 12 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
        , <&expander 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
        ;
        row-gpios
        = <&expander 14 GPIO_ACTIVE_LOW>
        , <&expander 15 GPIO_ACTIVE_LOW>
        , <&expander 6  GPIO_ACTIVE_LOW>
        , <&expander 7  GPIO_ACTIVE_LOW>
        , <&expander 2  GPIO_ACTIVE_LOW>
        , <&expander 4  GPIO_ACTIVE_LOW>
        , <&expander 5  GPIO_ACTIVE_LOW>
        , <&expander 1  GPIO_ACTIVE_LOW>
        , <&expander 3  GPIO_ACTIVE_LOW>
        ;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <6>;
        rows = <9>;
        map = <
          RC(0,0)  RC(0,1)  RC(0,2)  RC(0,3)  RC(0,4)  RC(0,5)                             RC(8,0)           RC(4,0)  RC(4,1)  RC(4,2)  RC(4,3)  RC(4,4)  RC(4,5)
          RC(1,0)  RC(1,1)  RC(1,2)  RC(1,3)  RC(1,4)  RC(1,5)                    RC(8,5)  RC(8,1)           RC(5,0)  RC(5,1)  RC(5,2)  RC(5,3)  RC(5,4)  RC(5,5)
          RC(2,0)  RC(2,1)  RC(2,2)  RC(2,3)  RC(2,4)  RC(2,5)                             RC(8,2)           RC(6,0)  RC(6,1)  RC(6,2)  RC(6,3)  RC(6,4)  RC(6,5)
                   RC(3,0)           RC(3,1)  RC(3,2)  RC(3,3)           RC(3,4)  RC(7,0)  RC(7,1)           RC(7,2)  RC(7,3)  RC(7,4)           RC(7,5)
        >;
    };

    /omit-if-no-ref/ left_encoder: encoder_0 {
        compatible = "alps,ec11";
        a-gpios = <&blackpill 12 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&blackpill 18 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        steps = <80>;
    };

    /omit-if-no-ref/ middle_encoder: encoder_1 {
        compatible = "alps,ec11";
        a-gpios = <&blackpill 38 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&blackpill 39 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        steps = <80>;
    };

    /omit-if-no-ref/ horizontal_encoder: encoder_2 {
        compatible = "alps,ec11";
        a-gpios = <&blackpill 3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&blackpill 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        steps = <80>;
    };

    /omit-if-no-ref/ right_encoder: encoder_3 {
        compatible = "alps,ec11";
        a-gpios = <&blackpill 45 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&blackpill 46 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        steps = <80>;
    };

    sensors: sensors_0 {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &middle_encoder &horizontal_encoder &right_encoder>;
        triggers-per-rotation = <20>;
    };

    cirque_input_listener: cirque_input_listener {
        compatible = "zmk,input-listener";
        device = <&cirque>;
        y-invert;
    };

    indicator_leds: indicator_leds {
        compatible = "gpio-leds";
        top_led: gpio_led_0 {
            gpios = <&blackpill 25 GPIO_ACTIVE_HIGH>;
        };
        middle_led: gpio_led_1 {
            gpios = <&blackpill 26 GPIO_ACTIVE_HIGH>;
        };
        bottom_led: gpio_led_2 {
            gpios = <&blackpill 27 GPIO_ACTIVE_HIGH>;
        };
    };
};

&blackpill_spi {
    status = "okay";
    cs-gpios = <&blackpill 13 GPIO_ACTIVE_LOW>;

    /omit-if-no-ref/ cirque: pinnacle@0 {
        compatible = "cirque,pinnacle";
        reg = <0>;
        spi-max-frequency = <8000000>;
        sleep;
        dr-gpios = <&blackpill 19 GPIO_ACTIVE_HIGH>;
        sensitivity = "1x";
    };
};

&blackpill_i2c {
    status = "okay";
    clock-frequency = <I2C_BITRATE_FAST>;

    expander: mcp230xx@20 {
        compatible = "microchip,mcp230xx";
        gpio-controller;
        reg = <0x20>;
        #gpio-cells = <2>;
        ngpios = <16>;

        /*
         * Note: INTA = &blackpill 11 and INTB = &blackpill 10. Zephyr currently only uses one interrupt pin.
         */
        int-gpios = <&blackpill 10 GPIO_ACTIVE_LOW>;
    };

    /omit-if-no-ref/ oled: ssd1306_0@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };

    /omit-if-no-ref/ wide_oled: ssd1306_1@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <64>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <63>;
        inversion-on;
        prechargep = <0x22>;
    };
};
