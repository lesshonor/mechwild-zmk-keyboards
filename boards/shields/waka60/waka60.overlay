/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan;
        zmk,matrix-transform = &all_1u_transform;
    };

    kscan: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        col-gpios
            = <&blackpill 21 GPIO_ACTIVE_HIGH>
            , <&blackpill 19 GPIO_ACTIVE_HIGH>
            , <&blackpill 18 GPIO_ACTIVE_HIGH>
            , <&blackpill 17 GPIO_ACTIVE_HIGH>
            , <&blackpill 16 GPIO_ACTIVE_HIGH>
            , <&blackpill 15 GPIO_ACTIVE_HIGH>
            , <&blackpill 14 GPIO_ACTIVE_HIGH>
            ;
        row-gpios
            = <&blackpill 45 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 40 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 39 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 46 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 38 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 25 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 26 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 27 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 28 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    all_1u_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6) RC(9,0) RC(9,1) RC(9,2) RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    two_one_one_one_one_one_transform: keymap_transform_1 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2)     RC(4,3)     RC(4,5) RC(4,6) RC(9,0) RC(9,1) RC(9,2) RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    one_one_one_one_one_two_transform: keymap_transform_2 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6) RC(9,0)     RC(9,2)     RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    one_one_one_one_two_one_transform: keymap_transform_3 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6)     RC(9,1)     RC(9,2) RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    one_two_one_one_one_one_transform: keymap_transform_4 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2) RC(4,3)     RC(4,5)     RC(4,6) RC(9,0) RC(9,1) RC(9,2) RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    one_two_one_two_one_transform: keymap_transform_5 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2) RC(4,3)     RC(4,5)     RC(4,6)     RC(9,1)     RC(9,2) RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    two_one_one_one_two_transform: keymap_transform_6 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2)     RC(4,3)     RC(4,5) RC(4,6) RC(9,0)     RC(9,2)     RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    one_one_three_two_transform: keymap_transform_7 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4)         RC(4,6)             RC(9,2)     RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    two_three_one_one_transform: keymap_transform_8 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2)     RC(4,3)             RC(4,6)         RC(9,1) RC(9,2) RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    one_one_three_one_one_transform: keymap_transform_9 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4)         RC(4,6)         RC(9,1) RC(9,2) RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    two_three_two_transform: keymap_transform_10 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2)    RC(4,3)              RC(4,6)             RC(9,2)     RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    one_one_one_one_three_transform: keymap_transform_11 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6)         RC(9,1)         RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    one_two_one_three_transform: keymap_transform_12 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2) RC(4,3)     RC(4,5)     RC(4,6)         RC(9,1)         RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    two_one_one_three_transform: keymap_transform_13 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2)     RC(4,3)     RC(4,5) RC(4,6)         RC(9,1)         RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    three_one_one_one_one_transform: keymap_transform_14 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2)         RC(4,4)         RC(4,6) RC(9,0) RC(9,1) RC(9,2) RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    three_one_two_one_transform: keymap_transform_15 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2)         RC(4,4)         RC(4,6)     RC(9,1)     RC(9,2) RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    three_one_one_two_transform: keymap_transform_16 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2)         RC(4,4)         RC(4,6) RC(9,0)         RC(9,2) RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    three_one_three_transform: keymap_transform_17 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2)        RC(4,4)          RC(4,6)          RC(9,1)        RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    full_space_transform: keymap_transform_18 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <10>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)           RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)  RC(3,6)  RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
             RC(4,0) RC(4,1) RC(4,2)                         RC(4,6)                         RC(9,3) RC(9,4) RC(9,5)
        >;
    };

    encoder: encoder_0 {
        compatible = "alps,ec11";
        a-gpios = <&blackpill 12 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&blackpill 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    sensors: sensors_0 {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
        triggers-per-rotation = <20>;
    };

    /* Speaker pin is <&blackpill 41> */
};

/* EEPROM IC, WIP I guess? */
&blackpill_i2c {
    status = "disabled";
};
