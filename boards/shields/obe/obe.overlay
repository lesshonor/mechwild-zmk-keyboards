/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

#include <dt-bindings/zmk/hid_usage.h>

/ {
    chosen {
        zmk,kscan = &kscan;
        zmk,matrix-transform = &default_transform;
    };

    kscan: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        row-gpios
            = <&blackpill 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 28 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 27 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 26 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 25 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 38 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 39 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
        col-gpios
            = <&blackpill 21 GPIO_ACTIVE_HIGH>
            , <&blackpill 19 GPIO_ACTIVE_HIGH>
            , <&blackpill 18 GPIO_ACTIVE_HIGH>
            , <&blackpill 17 GPIO_ACTIVE_HIGH>
            , <&blackpill 16 GPIO_ACTIVE_HIGH>
            , <&blackpill 15 GPIO_ACTIVE_HIGH>
            , <&blackpill 14 GPIO_ACTIVE_HIGH>
            , <&blackpill 13 GPIO_ACTIVE_HIGH>
            , <&blackpill 12 GPIO_ACTIVE_HIGH>
            , <&blackpill 11 GPIO_ACTIVE_HIGH>
            ;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC(5,5) RC(5,4) RC(5,3) RC(5,2) RC(5,1) RC(5,0) RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
            RC(6,5) RC(5,9) RC(5,8) RC(5,7) RC(5,6) RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8)         RC(1,9)
            RC(6,4) RC(6,9) RC(6,8) RC(6,3) RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8)                 RC(2,9)
                    RC(6,2) RC(6,0) RC(6,7) RC(6,6) RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8)         RC(3,9)
                    RC(6,1) RC(4,0) RC(4,1)         RC(4,2) RC(4,3)         RC(4,4)         RC(4,5) RC(4,6) RC(4,7) RC(4,8)         RC(4,9)
        >;
    };

    full_rshift_transform: keymap_transform_1 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC(5,5) RC(5,4) RC(5,3) RC(5,2) RC(5,1) RC(5,0) RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
            RC(6,5) RC(5,9) RC(5,8) RC(5,7) RC(5,6) RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8)         RC(1,9)
            RC(6,4) RC(6,9) RC(6,8) RC(6,3) RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8)                 RC(2,9)
                    RC(6,2) RC(6,0) RC(6,7) RC(6,6) RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7)                 RC(3,9)
                    RC(6,1) RC(4,0) RC(4,1)         RC(4,2) RC(4,3)         RC(4,4)         RC(4,5) RC(4,6) RC(4,7) RC(4,8)         RC(4,9)
        >;
    };

    full_backspace_transform: keymap_transform_2 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC(5,5) RC(5,4) RC(5,3) RC(5,2) RC(5,1) RC(5,0) RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,9)
            RC(6,5) RC(5,9) RC(5,8) RC(5,7) RC(5,6) RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
            RC(6,4) RC(6,9) RC(6,8) RC(6,3) RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8)         RC(2,9)
                    RC(6,2) RC(6,0) RC(6,7) RC(6,6) RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9)
                    RC(6,1) RC(4,0) RC(4,1)         RC(4,2) RC(4,3)         RC(4,4)         RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9)
        >;
    };

    full_backspace_full_rshift_transform: keymap_transform_3 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC(5,5) RC(5,4) RC(5,3) RC(5,2) RC(5,1) RC(5,0) RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,9)
            RC(6,5) RC(5,9) RC(5,8) RC(5,7) RC(5,6) RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
            RC(6,4) RC(6,9) RC(6,8) RC(6,3) RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8)         RC(2,9)
                    RC(6,2) RC(6,0) RC(6,7) RC(6,6) RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7)         RC(3,9)
                    RC(6,1) RC(4,0) RC(4,1)         RC(4,2) RC(4,3)         RC(4,4)         RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9)
        >;
    };

    encoder: encoder_0 {
        compatible = "alps,ec11";
        a-gpios = <&blackpill 40 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&blackpill 41 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    sensors: sensors_0 {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
        triggers-per-rotation = <20>;
    };

    indicator_leds: indicator_leds {
        compatible = "gpio-leds";
        left_led: led_0 {
            gpios = <&blackpill 46 GPIO_ACTIVE_HIGH>;
        };
        right_led: led_1 {
            gpios = <&blackpill 45 GPIO_ACTIVE_HIGH>;
        };
    };

    indicator_cfg {
        compatible = "mechwild,indicators";
        left_led_cfg: config1 {
            dev = <&left_led>;
            hid-indicators = <HID_USAGE_LED_NUM_LOCK>;
        };
        right_led_cfg: config2 {
            dev = <&right_led>;
            hid-indicators = <HID_USAGE_LED_CAPS_LOCK>;
        };
    };
};
