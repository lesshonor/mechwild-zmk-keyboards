/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {

    chosen {
        zmk,kscan = &kscan;
        zmk,matrix-transform = &default_transform;
    };

    kscan: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        row-gpios
            = <&blackpill 26 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 39 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 17 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 25 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
        col-gpios
            = <&blackpill 27 GPIO_ACTIVE_HIGH>
            , <&blackpill 28 GPIO_ACTIVE_HIGH>
            , <&blackpill 29 GPIO_ACTIVE_HIGH>
            , <&blackpill 38 GPIO_ACTIVE_HIGH>
            , <&blackpill 40 GPIO_ACTIVE_HIGH>
            , <&blackpill 41 GPIO_ACTIVE_HIGH>
            , <&blackpill 45 GPIO_ACTIVE_HIGH>
            , <&blackpill 46 GPIO_ACTIVE_HIGH>
            , <&blackpill 18 GPIO_ACTIVE_HIGH>
            ;
    };

    default_transform: keymap_transform0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(5,8) RC(5,7) RC(5,6) RC(5,5) RC(5,4)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(6,8) RC(6,7) RC(6,6) RC(6,5) RC(6,4)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(7,0) RC(6,0) RC(6,1) RC(6,2) RC(6,3)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(7,8) RC(7,7) RC(7,6) RC(7,5) RC(7,4) RC(7,3)
            RC(4,0) RC(4,1) RC(4,2)                 RC(4,5)                         RC(4,3) RC(4,4) RC(4,6) RC(4,7) RC(4,8) RC(7,2)
        >;
    };

    full_enter_transform: keymap_transform1 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(5,8) RC(5,7) RC(5,6) RC(5,5) RC(5,4)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(6,8) RC(6,7) RC(6,6) RC(6,5) RC(6,4)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(7,0) RC(6,0) RC(6,1)     RC(6,2)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(7,8) RC(7,7) RC(7,6) RC(7,5) RC(7,4) RC(7,3)
            RC(4,0) RC(4,1) RC(4,2)                 RC(4,5)                         RC(4,3) RC(4,4) RC(4,6) RC(4,7) RC(4,8) RC(7,2)
        >;
    };

    full_lshift_transform: keymap_transform2 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(5,8) RC(5,7) RC(5,6) RC(5,5) RC(5,4)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(6,8) RC(6,7) RC(6,6) RC(6,5) RC(6,4)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(7,0) RC(6,0) RC(6,1) RC(6,2) RC(6,3)
                RC(3,0)     RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(7,8) RC(7,7) RC(7,6) RC(7,5) RC(7,4) RC(7,3)
            RC(4,0) RC(4,1) RC(4,2)                 RC(4,5)                         RC(4,3) RC(4,4) RC(4,6) RC(4,7) RC(4,8) RC(7,2)
        >;
    };

    full_enter_full_lshift_transform: keymap_transform3 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(5,8) RC(5,7) RC(5,6) RC(5,5) RC(5,4)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(6,8) RC(6,7) RC(6,6) RC(6,5) RC(6,4)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(7,0) RC(6,0) RC(6,1)     RC(6,2)
                RC(3,0)     RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(7,8) RC(7,7) RC(7,6) RC(7,5) RC(7,4) RC(7,3)
            RC(4,0) RC(4,1) RC(4,2)                 RC(4,5)                         RC(4,3) RC(4,4) RC(4,6) RC(4,7) RC(4,8) RC(7,2)
        >;
    };

    big_bar_transform: keymap_transform4 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(5,8) RC(5,7) RC(5,6) RC(5,5) RC(5,4)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(6,8) RC(6,7) RC(6,6) RC(6,5) RC(6,4)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(7,0) RC(6,0) RC(6,1) RC(6,2) RC(6,3)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(7,8) RC(7,7) RC(7,6) RC(7,5) RC(7,4) RC(7,3)
            RC(4,0) RC(4,1)                         RC(4,5)                                 RC(4,3) RC(4,6) RC(4,7) RC(4,8) RC(7,2)
        >;
    };

    big_bar_full_enter_transform: keymap_transform5 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(5,8) RC(5,7) RC(5,6) RC(5,5) RC(5,4)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(6,8) RC(6,7) RC(6,6) RC(6,5) RC(6,4)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(7,0) RC(6,0) RC(6,1)     RC(6,2)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(7,8) RC(7,7) RC(7,6) RC(7,5) RC(7,4) RC(7,3)
            RC(4,0) RC(4,1)                         RC(4,5)                                 RC(4,3) RC(4,6) RC(4,7) RC(4,8) RC(7,2)
        >;
    };

    big_bar_full_lshift_transform: keymap_transform6 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(5,8) RC(5,7) RC(5,6) RC(5,5) RC(5,4)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(6,8) RC(6,7) RC(6,6) RC(6,5) RC(6,4)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(7,0) RC(6,0) RC(6,1) RC(6,2) RC(6,3)
                RC(3,0)     RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(7,8) RC(7,7) RC(7,6) RC(7,5) RC(7,4) RC(7,3)
            RC(4,0) RC(4,1)                         RC(4,5)                                 RC(4,3) RC(4,6) RC(4,7) RC(4,8) RC(7,2)
        >;
    };

    big_bar_full_enter_full_lshift_transform: keymap_transform7 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(5,8) RC(5,7) RC(5,6) RC(5,5) RC(5,4)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(6,8) RC(6,7) RC(6,6) RC(6,5) RC(6,4)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(7,0) RC(6,0) RC(6,1)     RC(6,2)
                RC(3,0)     RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(7,8) RC(7,7) RC(7,6) RC(7,5) RC(7,4) RC(7,3)
            RC(4,0) RC(4,1)                         RC(4,5)                                 RC(4,3) RC(4,6) RC(4,7) RC(4,8) RC(7,2)
        >;
    };

    encoder: encoder_0 {
        compatible = "alps,ec11";
        a-gpios = <&blackpill 12 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&blackpill 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    sensors: sensors_0 {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
        triggers-per-rotation = <20>;
    };
};
