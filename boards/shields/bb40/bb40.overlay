/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

#include <dt-bindings/zmk/hid_usage.h>

/ {
    chosen {
        zmk,kscan = &kscan;
        zmk,matrix-transform = &split_space_transform;
    };

    kscan: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        col-gpios
            = <&blackpill 21 GPIO_ACTIVE_HIGH>
            , <&blackpill 19 GPIO_ACTIVE_HIGH>
            , <&blackpill 18 GPIO_ACTIVE_HIGH>
            , <&blackpill 17 GPIO_ACTIVE_HIGH>
            , <&blackpill 16 GPIO_ACTIVE_HIGH>
            , <&blackpill 15 GPIO_ACTIVE_HIGH>
            , <&blackpill 14 GPIO_ACTIVE_HIGH>
            , <&blackpill 13 GPIO_ACTIVE_HIGH>
            , <&blackpill 12 GPIO_ACTIVE_HIGH>
            , <&blackpill 11 GPIO_ACTIVE_HIGH>
            , <&blackpill 10 GPIO_ACTIVE_HIGH>
            , <&blackpill 4  GPIO_ACTIVE_HIGH>
            ;
        row-gpios
            = <&blackpill 25 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 26 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 27 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&blackpill 28 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    split_space_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
          RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)  RC(0,10) RC(0,11)
          RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)  RC(1,11)
          RC(2,0) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
          RC(3,0) RC(3,1) RC(3,2)  RC(3,4)  RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11)
        >;
    };

    full_space_transform: keymap_transform_1 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
          RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)  RC(0,10) RC(0,11)
          RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)  RC(1,11)
          RC(2,0) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
          RC(3,0) RC(3,1) RC(3,2)           RC(3,6)         RC(3,8) RC(3,9) RC(3,10) RC(3,11)
        >;
    };

    encoder: encoder_0 {
        compatible = "alps,ec11";
        a-gpios = <&blackpill 39 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&blackpill 40 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    sensors: sensors_0 {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
        triggers-per-rotation = <20>;
    };

    indicator_leds: indicator_leds {
        compatible = "gpio-leds";
        top_led: led_0 {
            gpios = <&blackpill 43 GPIO_ACTIVE_HIGH>;
        };
        middle_led: led_1 {
            gpios = <&blackpill 45 GPIO_ACTIVE_HIGH>;
        };
        bottom_led: led_2 {
            gpios = <&blackpill 46 GPIO_ACTIVE_HIGH>;
        };
    };

    indicator_cfg {
        compatible = "mechwild,indicators";
        top_led_cfg: config1 {
            dev = <&top_led>;
            hid-indicators = <HID_USAGE_LED_NUM_LOCK>;
        };
        middle_led_cfg: config2 {
            dev = <&middle_led>;
            hid-indicators = <HID_USAGE_LED_CAPS_LOCK>;
        };
        bottom_led_cfg: config3 {
            dev = <&bottom_led>;
            hid-indicators = <HID_USAGE_LED_SCROLL_LOCK>;
        };
    };
};
